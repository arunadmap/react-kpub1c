{"ast":null,"code":"var _jsxFileName = \"/Users/aruna/GitHub/react-kpub1c/src/create-survey.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Checkbox, Form, Input, Space } from 'antd';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateSurvey = () => {\n  _s();\n\n  const [survey, setSurvey] = useState([{\n    \"questionType\": \"MCQ\",\n    \"answerList\": [{\n      \"id\": 1,\n      \"description\": \"0-20\"\n    }, {\n      \"id\": 2,\n      \"description\": \"21-30\"\n    }, {\n      \"id\": 3,\n      \"description\": \"31-40\"\n    }, {\n      \"id\": 4,\n      \"description\": \"\"\n    }, {\n      \"id\": 5,\n      \"description\": \"\"\n    }],\n    \"description\": \"What is your age range?\"\n  }, {\n    \"questionType\": \"MCQ\",\n    \"answerList\": [{\n      \"id\": 1,\n      \"description\": \"ADL\"\n    }, {\n      \"id\": 2,\n      \"description\": \"Dialog\"\n    }, {\n      \"id\": 3,\n      \"description\": \"Mobitel\"\n    }, {\n      \"id\": 4,\n      \"description\": \"Ncell\"\n    }, {\n      \"id\": 5,\n      \"description\": \"XL\"\n    }],\n    \"description\": \"What is your company name?\"\n  }, {\n    \"questionType\": \"OPEN_ENDED\",\n    \"answerList\": null,\n    \"description\": \"What is your company name?\"\n  }]);\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    },\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    autoComplete: \"off\",\n    children: [survey.length ? survey.map(question => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          align: \"baseline\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Description\",\n            name: \"description\",\n            rules: [{\n              required: false,\n              message: 'Please input your username!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this), question.questionType === \"MCQ\" ? question.answerList.map(answer => /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: answer.id,\n            name: answer.id,\n            rules: [{\n              required: false,\n              message: 'Please input your username!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 23\n          }, this)) : null]\n        }, question.description, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    }) : 'button', /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateSurvey, \"8BFqIUBYll54dyFg3s1tuxq/Ii4=\");\n\n_c = CreateSurvey;\nexport default CreateSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"names":["Button","Checkbox","Form","Input","Space","React","useState","CreateSurvey","survey","setSurvey","onFinish","values","console","log","onFinishFailed","errorInfo","span","remember","length","map","question","required","message","questionType","answerList","answer","id","description","offset"],"sources":["/Users/aruna/GitHub/react-kpub1c/src/create-survey.js"],"sourcesContent":["import { Button, Checkbox, Form, Input, Space } from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\nconst CreateSurvey = () => {\r\n\r\n  const [survey, setSurvey] = useState([\r\n    {\r\n      \"questionType\": \"MCQ\",\r\n      \"answerList\": [\r\n        {\r\n          \"id\": 1,\r\n          \"description\": \"0-20\"\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"description\": \"21-30\"\r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"description\": \"31-40\"\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"description\": \"\"\r\n        },\r\n        {\r\n          \"id\": 5,\r\n          \"description\": \"\"\r\n        }\r\n      ],\r\n      \"description\": \"What is your age range?\"\r\n    },\r\n    {\r\n      \"questionType\": \"MCQ\",\r\n      \"answerList\": [\r\n        {\r\n          \"id\": 1,\r\n          \"description\": \"ADL\"\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"description\": \"Dialog\"\r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"description\": \"Mobitel\"\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"description\": \"Ncell\"\r\n        },\r\n        {\r\n          \"id\": 5,\r\n          \"description\": \"XL\"\r\n        }\r\n      ],\r\n      \"description\": \"What is your company name?\"\r\n    },\r\n    {\r\n      \"questionType\": \"OPEN_ENDED\",\r\n      \"answerList\": null,\r\n      \"description\": \"What is your company name?\"\r\n    }\r\n  ])\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n\r\n  return (\r\n    <Form\r\n      name=\"basic\"\r\n      labelCol={{\r\n        span: 8,\r\n      }}\r\n      wrapperCol={{\r\n        span: 16,\r\n      }}\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n    >\r\n\r\n      {survey.length ?\r\n\r\n        survey.map((question) => {\r\n\r\n          return (\r\n            <>\r\n              \r\n                <Space key={question.description} align=\"baseline\">\r\n                  <Form.Item\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n\r\n                    rules={[\r\n                      {\r\n                        required: false,\r\n                        message: 'Please input your username!',\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n\r\n                  {question.questionType === \"MCQ\" ?\r\n                    question.answerList.map((answer) => (\r\n                      <Form.Item\r\n                        label={answer.id}\r\n                        name={answer.id}\r\n                        \r\n                        rules={[\r\n                          {\r\n                            required: false,\r\n                            message: 'Please input your username!',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>))\r\n                    : null}\r\n                </Space>\r\n             \r\n            </>\r\n          )\r\n        }\r\n\r\n\r\n        )\r\n\r\n\r\n\r\n        : 'button'}\r\n\r\n\r\n\r\n\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateSurvey;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}