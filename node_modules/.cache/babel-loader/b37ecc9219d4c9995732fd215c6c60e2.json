{"ast":null,"code":"var _jsxFileName = \"/Users/aruna/GitHub/react-kpub1c/src/create-survey.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Checkbox, Form, Input, Space } from 'antd';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateSurvey = () => {\n  _s();\n\n  const [survey, setSurvey] = useState([{\n    \"id\": 1,\n    \"questionType\": \"MCQ\",\n    \"answerList\": [{\n      \"id\": 1,\n      \"description\": \"0-20\"\n    }, {\n      \"id\": 2,\n      \"description\": \"21-30\"\n    }, {\n      \"id\": 3,\n      \"description\": \"31-40\"\n    }, {\n      \"id\": 4,\n      \"description\": \"\"\n    }, {\n      \"id\": 5,\n      \"description\": \"\"\n    }],\n    \"description\": \"What is your age range?\"\n  }, {\n    \"id\": 2,\n    \"questionType\": \"MCQ\",\n    \"answerList\": [{\n      \"id\": 1,\n      \"description\": \"ADL\"\n    }, {\n      \"id\": 2,\n      \"description\": \"Dialog\"\n    }, {\n      \"id\": 3,\n      \"description\": \"Mobitel\"\n    }, {\n      \"id\": 4,\n      \"description\": \"Ncell\"\n    }, {\n      \"id\": 5,\n      \"description\": \"XL\"\n    }],\n    \"description\": \"What is your company name?\"\n  }, {\n    \"id\": 3,\n    \"questionType\": \"OPEN_ENDED\",\n    \"answerList\": null,\n    \"description\": \"What is your company name?\"\n  }]);\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form.Provider, {\n    onFormFinish: (name, _ref) => {\n      let {\n        values,\n        forms\n      } = _ref;\n      console.log(name);\n    },\n    children: [survey.length ? survey.map(question => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: question.id,\n          labelCol: {\n            span: 8\n          },\n          wrapperCol: {\n            span: 16\n          },\n          initialValues: {\n            remember: true\n          },\n          onFinish: onFinish,\n          onFinishFailed: onFinishFailed,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Description\",\n            name: question.description,\n            rules: [{\n              required: false,\n              message: 'Please input your username!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), question.questionType === \"MCQ\" ? question.answerList.map(answer => /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: answer.id,\n            name: answer.id,\n            rules: [{\n              required: false,\n              message: 'Please input your username!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }) : 'button', /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateSurvey, \"aRAHQETxIWqLW+Sts2/TGcX/fCs=\");\n\n_c = CreateSurvey;\nexport default CreateSurvey;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSurvey\");","map":{"version":3,"names":["Button","Checkbox","Form","Input","Space","React","useState","CreateSurvey","survey","setSurvey","onFinish","values","console","log","onFinishFailed","errorInfo","name","forms","length","map","question","id","span","remember","description","required","message","questionType","answerList","answer","offset"],"sources":["/Users/aruna/GitHub/react-kpub1c/src/create-survey.js"],"sourcesContent":["import { Button, Checkbox, Form, Input, Space } from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\nconst CreateSurvey = () => {\r\n\r\n  const [survey, setSurvey] = useState([\r\n    {\r\n      \"id\": 1,\r\n      \"questionType\": \"MCQ\",\r\n      \"answerList\": [\r\n        {\r\n          \"id\": 1,\r\n          \"description\": \"0-20\"\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"description\": \"21-30\"\r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"description\": \"31-40\"\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"description\": \"\"\r\n        },\r\n        {\r\n          \"id\": 5,\r\n          \"description\": \"\"\r\n        }\r\n      ],\r\n      \"description\": \"What is your age range?\"\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"questionType\": \"MCQ\",\r\n      \"answerList\": [\r\n        {\r\n          \"id\": 1,\r\n          \"description\": \"ADL\"\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"description\": \"Dialog\"\r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"description\": \"Mobitel\"\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"description\": \"Ncell\"\r\n        },\r\n        {\r\n          \"id\": 5,\r\n          \"description\": \"XL\"\r\n        }\r\n      ],\r\n      \"description\": \"What is your company name?\"\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"questionType\": \"OPEN_ENDED\",\r\n      \"answerList\": null,\r\n      \"description\": \"What is your company name?\"\r\n    }\r\n  ])\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n\r\n  return (\r\n    <Form.Provider\r\n      onFormFinish={(name, { values, forms }) => {\r\n        console.log(name);\r\n      }\r\n      }\r\n    >\r\n\r\n\r\n\r\n\r\n      {survey.length ?\r\n\r\n        survey.map((question) => {\r\n\r\n          return (\r\n            <>\r\n              <Form\r\n                name={question.id}\r\n                labelCol={{\r\n                  span: 8,\r\n                }}\r\n                wrapperCol={{\r\n                  span: 16,\r\n                }}\r\n                initialValues={{\r\n                  remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n              >\r\n\r\n\r\n                <Form.Item\r\n                  label=\"Description\"\r\n                  name={question.description}\r\n\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: 'Please input your username!',\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n\r\n\r\n                {question.questionType === \"MCQ\" ?\r\n                  question.answerList.map((answer) => (\r\n                    <Form.Item\r\n                      label={answer.id}\r\n                      name={answer.id}\r\n\r\n                      rules={[\r\n                        {\r\n                          required: false,\r\n                          message: 'Please input your username!',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  ))\r\n                  : null}\r\n\r\n              </Form>\r\n            </>\r\n          )\r\n        }\r\n\r\n\r\n        )\r\n\r\n\r\n\r\n        : 'button'}\r\n\r\n\r\n\r\n\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n\r\n    </Form.Provider >\r\n  );\r\n};\r\n\r\nexport default CreateSurvey;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}